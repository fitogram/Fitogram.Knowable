dist: xenial
language: csharp
dotnet: 5.0
mono: none

script:

  # Compose package version
  - PACKAGE_VERSION=1.0
  - PACKAGE_VERSION=$PACKAGE_VERSION.$TRAVIS_BUILD_NUMBER
  - if [[ $TRAVIS_BRANCH != "master" ]]; then PACKAGE_VERSION=$PACKAGE_VERSION-$TRAVIS_BRANCH; fi
  - PACKAGE_VERSION=${PACKAGE_VERSION//\//-}
  # Restore nuget packages
  - dotnet restore
  # Build nuget packages
  - dotnet pack -c Release /property:Version=$PACKAGE_VERSION ./Fitogram.Knowable
  - dotnet pack -c Release /property:Version=$PACKAGE_VERSION ./Fitogram.Knowable.NewtonsoftJson
  - dotnet pack -c Release /property:Version=$PACKAGE_VERSION ./Fitogram.Knowable.SystemTextJson
  # Run tests
  - dotnet test --nologo

deploy:

  # publish Fitogram.Knowable
  - provider: script
    script:
      - dotnet nuget push ./Fitogram.Knowable/bin/Release/Fitogram.Knowable.$PACKAGE_VERSION.nupkg -s https://www.myget.org/F/fitogram/auth/32a01064-a2fe-4043-b079-f23bbc4ab1af/api/v3/index.json;
    skip_cleanup: true
    on:
      all_branches: true

  # publish Fitogram.Knowable.SystemTextJson
  - provider: script
    script:
      - dotnet nuget push ./Fitogram.Knowable.SystemTextJson/bin/Release/Fitogram.Knowable.SystemTextJson.$PACKAGE_VERSION.nupkg -s https://www.myget.org/F/fitogram/auth/32a01064-a2fe-4043-b079-f23bbc4ab1af/api/v3/index.json;
    skip_cleanup: true
    on:
      all_branches: true

  # publish Fitogram.Knowable.NewtonsoftJson
  - provider: script
    script:
      - dotnet nuget push ./Fitogram.Knowable.NewtonsoftJson/bin/Release/Fitogram.Knowable.NewtonsoftJson.$PACKAGE_VERSION.nupkg -s https://www.myget.org/F/fitogram/auth/32a01064-a2fe-4043-b079-f23bbc4ab1af/api/v3/index.json;
    skip_cleanup: true
    on:
      all_branches: true

after_success:
  - echo "Tadaaaaaa :)"
