name: .NET

on:
  push:
    branches:
      - '*'
    # Run only when there is no open pull request
    # (i.e., this is a direct push to the branch)
    # and the branch is not master
    if: >
      github.event.pull_request == null &&
      github.ref != 'refs/heads/master'
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4
      with:
        prefix: CI_
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.x
          3.1.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Nerdbank.GitVersioning
      id: nbgv
      uses: dotnet/nbgv@v0.4.1
    - run: echo ${{ github.event_name }}
    - name: Build version (master)
      if: github.event.pull_request.merged == 'true'
      run: echo "PUBLISH_VERSION=${{ steps.nbgv.outputs.SimpleVersion }}.${{ steps.nbgv.outputs.VersionHeight }}" >> $GITHUB_ENV
      shell: bash
    - name: Build version (branch)
      # Run only when pushing to a branch that is not master
      # and there is no open pull request
      if: >
        github.event.pull_request == null &&
        github.ref != 'refs/heads/master'
      run: echo "PUBLISH_VERSION=${{ steps.nbgv.outputs.SimpleVersion }}.${{ steps.nbgv.outputs.VersionHeight }}-$(echo $GITHUB_REF | sed 's#refs/heads/##')" >> $GITHUB_ENV
      shell: bash
    - run: |
        echo 'PUBLISH_VERSION=${{ env.PUBLISH_VERSION }}'
        echo 'slug=${{ env.CI_GITHUB_REF_SLUG }}'
        echo 'GitBuildVersion=${{ steps.nbgv.outputs.GitBuildVersion }}'
        echo 'versionHeight=${{ steps.nbgv.outputs.VersionHeight }}'
        echo 'SemVer1=${{ steps.nbgv.outputs.SemVer1 }}'
        echo 'SemVer2=${{ steps.nbgv.outputs.SemVer2 }}'
        echo 'CloudBuildNumber=${{ steps.nbgv.outputs.CloudBuildNumber }}'
        echo 'SimpleVersion=${{ steps.nbgv.outputs.SimpleVersion }}'
        echo 'PrereleaseVersion=${{ steps.nbgv.outputs.PrereleaseVersion }}'
        echo 'Prerelease=${{ steps.nbgv.outputs.Prerelease }}'
